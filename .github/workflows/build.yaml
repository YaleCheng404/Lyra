name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/workflows/trigger.yaml"
#  schedule:
#    # Monthly, 00:00 UTC on the 3rd
#    - cron: "0 0 3 * *"
  workflow_dispatch:

jobs:
  process-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"
      # 下载焊入html的i18n
      - name: Download game files (zip)
        uses: robinraju/release-downloader@v1.12
        with:
          repository: "DoL-Lyra/DoLModLoaderBuild"
          latest: true
          fileName: "DoL-ModLoader-*.zip"

      # 下载汉化仓库的apk
      - name: Download game files (apk)
        uses: robinraju/release-downloader@v1.12
        with:
          repository: "Eltirosto/Degrees-of-Lewdity-Chinese-Localization"
          latest: true
          fileName: "DoL-ModLoader-*-v*[^polyfill].APK"

      # 修改内容
      - name: Modify ZIP&APK
        run: |
          # Download apktool
          URL_APKTOOL=https://github.com/iBotPeaches/Apktool/releases/download/v2.12.0/apktool_2.12.0.jar
          wget -q -nc -O apktool.jar $URL_APKTOOL
          APKTOOL=$(realpath apktool.jar)

          mkdir ${{ github.workspace }}/output
          mkdir modify_tmp
          # 解压apk
          java -jar $APKTOOL d *.APK -o modify_tmp/apk

          ver=( 0 2 4 6 132 134 )
          for v in "${ver[@]}"
          do
            dol_basename=$(basename DoL*[^polyfill]-${v}.zip .zip)
            unzip -q ${dol_basename}.zip -d modify_tmp/zip
            # 将zip的img覆盖到apk
            cp -r "modify_tmp/zip/img" "modify_tmp/apk/assets/www/"
            # 将zip的html覆盖到apk
            cp "modify_tmp/zip/Degrees of Lewdity.html" "modify_tmp/apk/assets/www/index.html"

            # patch apk
            pushd modify_tmp/apk/assets/www
            patch < ${{ github.workspace }}/patches/0001-dol-android-save-to-file.patch
            popd

            # 打包
            # zip
            pushd modify_tmp/zip
            zip -q -r ${dol_basename}.zip *
            mv ${dol_basename}.zip ${{ github.workspace }}/output/
            popd
            # apk
            java -jar $APKTOOL b modify_tmp/apk -o ${dol_basename}.apk
            mv ${dol_basename}.apk ${{ github.workspace }}/output/
            # 清理
            rm -rf modify_tmp/zip
          done

          # polyfill
          dol_basename=$(basename DoL*polyfill-6.zip .zip)
          unzip -q ${dol_basename}.zip -d modify_tmp/zip
          # 将zip的img覆盖到apk
          cp -r "modify_tmp/zip/img" "modify_tmp/apk/assets/www/"
          # 将zip的html覆盖到apk
          cp "modify_tmp/zip/Degrees of Lewdity.html" "modify_tmp/apk/assets/www/index.html"
          # 打包
          pushd modify_tmp/zip
          zip -q -r ${dol_basename}.zip *
          mv ${dol_basename}.zip ${{ github.workspace }}/output/
          popd
          # apk
          java -jar $APKTOOL b modify_tmp/apk -o ${dol_basename}.apk
          mv ${dol_basename}.apk ${{ github.workspace }}/output/
          # 清理
          rm -rf modify_tmp/zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gamefile-zip
          path: ${{ github.workspace }}/output/*.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gamefile-apk
          path: ${{ github.workspace }}/output/*.apk

  build-matrix:
    needs: process-package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        pack: [zip, apk]
        # Only build the besc+cheat+csd+ucb variant
        code: [263]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"

      # 下载处理过的游戏文件
      - uses: actions/download-artifact@v4
        with:
          name: gamefile-${{ matrix.pack }}
          path: ${{ github.workspace }}

      - name: Run mod script
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          set -euo pipefail
          if [ -n "${SIGNING_KEY:-}" ]; then
            if printf '%s' "$SIGNING_KEY" | base64 -d > dol.jks 2>/dev/null; then
              echo "Decoded signing keystore from secret"
            else
              echo "SIGNING_KEY is invalid base64; generating temporary debug keystore"
              keytool -genkeypair -alias dol -keystore dol.jks -storepass dolchs -keypass dolchs -keyalg RSA -keysize 2048 -validity 36500 -dname "CN=DoL Lyra, OU=CI, O=Lyra, L=Internet, S=NA, C=US"
            fi
          else
            echo "SIGNING_KEY not set; generating temporary debug keystore"
            keytool -genkeypair -alias dol -keystore dol.jks -storepass dolchs -keypass dolchs -keyalg RSA -keysize 2048 -validity 36500 -dname "CN=DoL Lyra, OU=CI, O=Lyra, L=Internet, S=NA, C=US"
          fi
          ./mod.sh ${{ matrix.pack }} ${{ matrix.code }} ${{ github.ref_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dol-${{ matrix.pack }}-${{ matrix.code }}
          path: output/*

  release:
    runs-on: ubuntu-latest
    needs: build-matrix
    # Run for tag builds and monthly schedule
    if: github.ref_type == 'tag' || github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: dol-*
          path: outputs
          merge-multiple: true

      - name: Compute release tag
        id: compute_tag
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            MONTH=$(date -u +%Y-%m)
            echo "RELEASE_TAG=monthly-${MONTH}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: outputs/{*.zip,*.apk}
          tag: ${{ env.RELEASE_TAG }}
          overwrite: true
          file_glob: true
          make_latest: true
          # prerelease: true
          release_name: ${{ env.RELEASE_TAG }}
          # body: |
          #   ${{ steps.gen_release_note.outputs.RELEASE_BODY }}

  call-deploy:
    uses: ./.github/workflows/deploy.yaml
    needs: release
    if: github.ref_type == 'tag' || github.event_name == 'schedule'
    secrets: inherit
